<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="generator" content="pandoc">
        <meta name="author" content="Peter Steinbach" />
            <meta name="dcterms.date" content="2017-05-11" />
        <title>high-bandwidth 3D image compression to boost predictive life sciences</title>
    <meta name="description" content="high-bandwidth 3D image compression to boost predictive life sciences">
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <!-- Bootstrap core CSS -->
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">
    
    <link rel="stylesheet" href="my_reveal.css"/>
        <link rel="stylesheet" href="reveal.js/css/theme/black.css" id="theme">
    
        <link rel="stylesheet" href="reveal.js/lib/css/zenburn.css">
    
    <!-- If the query includes 'print-pdf', include the PDF print sheet -->
    <script>
      if( window.location.search.match( /print-pdf/gi ) ) {
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = 'reveal.js/css/print/pdf.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
      }
    </script>
    <!--[if lt IE 9]>
	<script src="reveal.js/lib/js/html5shiv.js"></script>
	<![endif]-->
          </head>
  <body>
        <div class="reveal">
      <div class="slides">

		<section>
	  <h1 class="title">high-bandwidth 3D image compression to boost predictive life sciences</h1>
	  	  <p>
	    <b>Peter Steinbach</b><br>
	    <emph>(Scionics Computer Innovation GmbH)</emph><br>
	    <a href="mailto:steinbach@scionics.de">steinbach@scionics.de</a>
	    <br><br>
	  </p>
	  
	  <h3 class="date">May 11, 2017</h3>
	</section>
		
	<section><section id="before-i-start" class="titleslide slide level1"><h1>Before I start</h1></section><section id="jeffrey-peter" class="slide level2">
<h1>Jeffrey != Peter</h1>
<div class="row vertical-align">
<div class="col-xs-6">
<center>
<p><em>presenter</em></p>
<figure>
<img src="img/jeffrey_kelling.png" alt="Jeffrey Kelling (HZDR)" style="width:50.0%" /><figcaption>Jeffrey Kelling (HZDR)</figcaption>
</figure>
</center>
</div>
<div class="col-xs-6">
<center>
<p><em>author</em></p>
<figure>
<img src="img/peter_steinbach.jpg" alt="Peter Steinbach (Scionics)" style="width:50.0%" /><figcaption>Peter Steinbach (Scionics)</figcaption>
</figure>
</center>
</div>
</div>
</section><section id="scionics-who" class="slide level2">
<h1>Scionics Who?</h1>
<div class="row vertical-align">
<div class="col-xs-6">
<p><img src="img/scionics_main_logo.png" /><br />
<a href="https://www.scionics.com/">Scionics Computer Innovation GmbH</a></p>
</div>
<div class="col-xs-6">
<ul>
<li>founded in 2000, Dresden (Germany)</li>
<li><p>service provider to the <a href="https://www.mpi-cbg.de/home/">Max Planck Institute of Molecular Cell Biology and Genetics</a></p>
<ul>
<li>scientific computing facility</li>
<li>IT infrastructure</li>
<li>public relations</li>
</ul></li>
</ul>
</div>
</div>
<div class="notes">
</section><section id="this-talk-is" class="slide level2">
<h1>This Talk is</h1>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="img/opensource-550x475.png" />
</figure>
<strong><a href="https://github.com/psteinb/gtc2017">github.com/psteinb/gtc2017</a></strong>
</center>
</div>
<div class="fragment">
<div class="col-xs-4">
<ul>
<li><p>code snippets</p></li>
<li><p>presentation links</p></li>
<li><p><a href="https://github.com/psteinb/gtc2017/issues">open an issue</a> for questions</p></li>
</ul>
</div>
</div>
</div>
</section><section id="outline" class="slide level2">
<h1>Outline</h1>
<div style="font-size : 1.5em">
<center>
<ol type="1">
<li><p>Scientific Motivation</p></li>
<li><p>Sqeazy library</p></li>
<li>Results</li>
</ol>
</center>
</div>
</section></section>
<section><section id="big-data-deluge-in-systems-biology" class="titleslide slide level1"><h1>Big Data Deluge in Systems Biology</h1></section><section id="spim" class="slide level2">
<h1><a href="https://en.wikipedia.org/wiki/Light_sheet_fluorescence_microscopy">SPIM</a></h1>
<center>
<figure>
<img src="img/1280px-Spim_prinziple_en.gray.png" alt="Selective Plane Illumination Microscopy" /><figcaption>Selective Plane Illumination Microscopy</figcaption>
</figure>
</center>
</section><section id="biologists-love-this" class="slide level2">
<h1>Biologists love this!</h1>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<video width="1200" poster="movies/Drosophila_Embryogenesis_beads_removed.png" controls>
<source src="movies/Drosophila_Embryogenesis_beads_removed.webm" type='video/webm; codecs="vp8.0, vorbis"'>
<source src="movies/Drosophila_Embryogenesis_beads_removed.mp4" type='video/mp4'>
<p>
Movie does not work! Sorry!
</p>
</video>
</center>
</div>
<div class="col-xs-4">
<p>3D rendering of Drosophila embryogenesis time-lapse data reconstructed from 5 angles SPIM recording</p>
<p><a href="https://extweb-srv5.mpi-cbg.de/de/research/research-groups/pavel-tomancak/movies.html">credits to Pavel Tomancak (MPI CBG)</a></p>
</div>
</div>
</section><section id="but-..." class="slide level2">
<h1>But ...</h1>
<div class="row vertical-align">
<div class="col-xs-6">
<center>
<figure>
<img src="img/xscope_schematic.png" alt="Design Draft of a modern SPIM microscope, credits Nicola Maghelli (MPI CBG, Myers lab)" style="width:100.0%" /><figcaption>Design Draft of a modern SPIM microscope, credits Nicola Maghelli (MPI CBG, Myers lab)</figcaption>
</figure>
</center>
</div>
<div class="col-xs-6">
<center>
<ul>
<li><p><em>today</em>:</p>
<ul>
<li>each CMOS camera can record 850 MB/s of 16bit grayscale</li>
<li>2 cameras per scope, 1.7 GB/s</li>
</ul></li>
<li><p>scientists would like to capture long timelapses <em>1-2 days</em> (or more)</p></li>
<li><p>total data volume per 1-2 day capture:</p></li>
</ul>
<p><em>150-300 TiB</em> raw volume</p>
<p>= <em>57 - 114 kEUR</em> in SSDs</p>
</center>
</div>
</div>
</section><section id="it-to-the-rescue" class="slide level2">
<h1>IT to the rescue</h1>
<center>
<figure>
<img src="fig/spim_dataflow_and_infrastructure.svg" style="width:85.0%" />
</figure>
</center>
</section><section id="does-that-scale" class="slide level2" data-background="img/ieee_data_deluge.jpg">
<h1><span style="color: white; background-color: gray;">Does that scale?</span></h1>
</section></section>
<section><section id="sqeazy" class="titleslide slide level1"><h1><a href="https://github.com/sqeazy/sqeazy">Sqeazy</a></h1></section><section id="open-source-compression-library" class="slide level2">
<h1><a href="https://github.com/sqeazy/sqeazy" target="_blank">Open-source Compression Library</a></h1>
<center>
<p><a href="https://github.com/sqeazy/sqeazy" target="_blank"> <img src="img/sqeazy-on-github.png" style="width:90.0%" /> </a></p>
</center>
</section><section id="yet-another-compression-library" class="slide level2">
<h1>Yet another compression library?</h1>
<div class="row vertical-align">
<div class="col-xs-6">
<center>
<figure>
<img src="img/800px-Paris_Tuileries_Garden_Facepalm_statue.jpg" alt="wikimedia commons" /><figcaption><a href="https://commons.wikimedia.org/wiki/File:Paris_Tuileries_Garden_Facepalm_statue.jpg">wikimedia commons</a></figcaption>
</figure>
</center>
</div>
<div class="col-xs-6">
<ul>
<li>heart of sqeazy: pipeline mechanism
<ul>
<li>transform data so that it can be compressed best</li>
<li>use very good and fast encoders as end of the pipeline, e.g. <a href="https://github.com/facebook/zstd">zstd</a>, <a href="https://github.com/lz4/lz4">lz4</a>, <a href="http://www.blosc.org/">blosc</a>, ...<br />
<em>use them, don't reinvent them!</em></li>
</ul></li>
<li><p>do it fast! (multi-core, SIMD)</p></li>
<li><p>written in C++11 (soon C++14)</p></li>
</ul>
</div>
</div>
</section><section id="can-we-do-better" class="slide level2">
<h1>Can we do better?</h1>
<center>
<p>3D in space = 2D in space + time!</p>
</center>
<div class="fragment">
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="img/800px-Resolution_of_SD,_Full_HD,_4K_Ultra_HD_&amp;_8K_Ultra_HD.svg.png" alt="wikimedia commons" style="width:80.0%" /><figcaption><a href="https://commons.wikimedia.org/wiki/File:Resolution_of_SD,_Full_HD,_4K_Ultra_HD_%26_8K_Ultra_HD.svg">wikimedia commons</a></figcaption>
</figure>
</center>
</div>
<div class="col-xs-4">
<ul>
<li>multimedia industry and video codec research has worked in high-bandwidth/low-latency regime for years</li>
<li>reuse their expertise through free available codec libraries</li>
<li>currently looking into <a href="https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC">h264/MPEG-4 AVC</a> and <a href="https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding">h265/hevc</a>, others are possible</li>
</ul>
</div>
</div>
</div>
</section><section id="challenge-spim-data" class="slide level2">
<h1>Challenge: SPIM data</h1>
<center>
<figure>
<img src="plots/corpus_drange.svg" style="width:90.0%" />
</figure>
</center>
<div class="row">
<div class="col-xs-6">
<ul>
<li>raw data is encoded as <em>grey16</em></li>
</ul>
</div>
<div class="col-xs-6">
<ul>
<li>pixel intensities occupy more than 8-bits<br />
mean +/- std = 11 +/- 3</li>
</ul>
</div>
</div>
</section><section id="solution-quantize-data" class="slide level2">
<h1>Solution: Quantize data</h1>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="data/sqy/sqy_median_based_mnmse.svg" style="width:100.0%" />
</figure>
</center>
</div>
<div class="col-xs-4">
<ul>
<li>lossy bucket based quantisation (16 -&gt; 8 bits per pixel)</li>
<li>quality loss minimal</li>
<li>bandwidth enough to take 8 cameras</li>
</ul>
</div>
</div>
</section><section id="ffmpeg" class="slide level2">
<h1>ffmpeg</h1>
<div class="row vertical-align">
<div class="col-xs-8">
<ul>
<li><p>using <a href="https://ffmpeg.org/">ffmpeg</a> framework to interface sqeazy to</p>
<ul>
<li><p>support CPU and GPU based encoding/decoding</p></li>
<li><p>enable future directions to non-x86 platforms</p></li>
<li><p>Linux, macOS, Windows supported</p></li>
</ul></li>
<li><p>steep learning curve for using libavcodec API</p></li>
<li><p>currently: ffmpeg 3.0.7</p></li>
</ul>
</div>
<div class="col-xs-4">
<figure>
<img src="img/ffmpeg-logo.png" style="width:80.0%" />
</figure>
</div>
</div>
</section><section id="hardware-accelerated-codecs" class="slide level2">
<h1>hardware accelerated codecs</h1>
<ul>
<li>production systems: Windows (microscope) and Linux (HPC) based (macOS mostly for decoding)</li>
</ul>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="img/ffmpeg_api_overview.png" alt="from ffmpeg wiki" style="width:100.0%" /><figcaption>from <a href="https://trac.ffmpeg.org/wiki/HWAccelIntro#Platformsoverview">ffmpeg wiki</a></figcaption>
</figure>
</center>
</div>
<div class="col-xs-4">
<ul>
<li><p>rarely any single library supports hardware accelerated video encoding uniformly</p></li>
<li><p>ffmpeg+nvenc meets our needs</p></li>
<li><p>encapsulates external dependencies (easier comparison)</p></li>
</ul>
</div>
</div>
</section></section>
<section><section id="results" class="titleslide slide level1"><h1>Results</h1></section><section id="benchmark-platform" class="slide level2">
<h1>benchmark platform</h1>
<div class="row">
<div class="col-xs-6">
<div style="font-size: 1.5em; text-align: center">
<p><em>hardware</em></p>
</div>
<ul>
<li>dual socket Intel Xeon <a href="http://www.cpu-world.com/CPUs/Xeon/Intel-Xeon%20E5-2680%20v3.html">E5-2680v3</a> (2x12c)</li>
<li>128GB DDR4 RAM</li>
<li>2x <a href="https://en.wikipedia.org/wiki/GeForce_10_series">Nvidia GeForce GTX1080</a></li>
<li>CentOS 7.1</li>
<li>host CPU limited to 8 threads to be close to production environment</li>
</ul>
</div>
<div class="col-xs-6">
<div style="font-size: 1.5em; text-align: center">
<p><em>software</em></p>
</div>
<ul>
<li><a href="https://ffmpeg.org/">ffmpeg</a> 3.0.7 (<a href="https://gist.github.com/Brainiarc7/988473b79fd5c8f0db54b92ebb47387a">build instructions</a>)</li>
<li><a href="http://git.videolan.org/git/x264.git">x264</a> (commit 90a61ec764)</li>
<li><a href="https://bitbucket.org/multicoreware/x265/wiki/Home">x265</a> 2.4</li>
<li><a href="https://gcc.gnu.org/">GNU gcc</a> 6.3 (5.4 when CUDA is required)</li>
<li><a href="https://developer.nvidia.com/nvidia-video-codec-sdk">Nvidia Media SDK</a> v7.1</li>
<li>Nvidia driver 375.26</li>
<li>CUDA 8.0.61</li>
<li><a href="https://snakemake.readthedocs.io/en/stable/">snakemake</a> 3.11.2 to orchestrate benchmarks</li>
</ul>
</div>
</div>
</section><section id="what-i-measured" class="slide level2">
<h1>what I measured</h1>
<ul>
<li><p>simple workflow based on ffmpeg performed on all:</p>
<ol type="1">
<li>quantize .tif images to YUV 4:2:0 with sqeazy (produce <em>input.y4m</em>)</li>
<li>encode <em>input.y4m</em> video with ffmpeg (take time, input/output files in ramdisk)</li>
<li>decode encoded.raw to obtain <em>roundtrip.y4m</em></li>
<li>compare quality of <em>input.y4m</em> and <em>roundtrip.y4m</em></li>
</ol></li>
<li>all timings based on <em>/usr/bin/time</em> if not stated otherwise</li>
<li><p>orchestration on our HPC infrastructure with <a href="https://snakemake.readthedocs.io/en/stable/">snakemake</a></p></li>
</ul>
</section><section id="cpu-only" class="slide level2">
<h1>CPU only</h1>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="data/ffmpeg//ffmpeg_video_codec_cpuonly.svg" style="width:90.0%" />
</figure>
</center>
</div>
<div class="col-xs-4">
<ul>
<li>x264 is fast, but doesn't provide high compression</li>
<li><p>x265 is slow, but does provide high compression</p></li>
<li><p>codec preset study ongoing with downstream analysis/processing</p></li>
</ul>
<center style="font-size: 1.25em">
<p><strong>GPUs to the rescue?</strong></p>
</center>
</div>
</div>
</section><section id="challenging-measurements" class="slide level2">
<h1>challenging measurements</h1>
<ul>
<li>running nvenc in ffmpeg observed with<br />
<code>nvprof --print-api-trace ffmpeg ...</code></li>
<li>cuCtxCreate/cuCtxDestroy based time delta from api trace</li>
</ul>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="data/ffmpeg/ffmpeg_timing_difference.svg" style="width:90.0%" />
</figure>
</center>
</div>
<div class="col-xs-4">
<center>
<p>ffmpeg induces quite some overhead on top of nvenc?</p>
</center>
</div>
</section><section id="gpu-enhanced-encoding" class="slide level2">
<h1>GPU enhanced encoding</h1>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="data/ffmpeg/ffmpeg_cpugpu_video_codecs_enhanced.svg" style="width:90.0%" />
</figure>
</center>
</div>
<div class="col-xs-4">
<ul>
<li><em>here</em>: using nvprof based timing</li>
<li><em>nvenc_h264</em> offers surprising compression ratios in comparison to <em>libx264</em> (preset definitions differ)</li>
<li>bandwidths are surprisingly low (nvenc docs suggest 6420 MB/s for h264 in this setting)</li>
</ul>
</div>
</section><section id="profiling-details" class="slide level2">
<h1>Profiling details</h1>
<pre><code>$ nvprof ffmpeg -i input.y4m -c:v nvenc_h264 -preset llhp -2pass 0 -gpu 1 -y output.h264</code></pre>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="img/nvprof_nvenc_h264.png" style="width:90.0%" />
</figure>
</center>
</div>
<div class="col-xs-4">
<ul>
<li>to no surpise: <em>h264 encoding is bound by host-device transfers</em></li>
<li>90% of runtime consumed by host-device transfers</li>
</ul>
</div>
</section></section>
<section><section id="summary" class="titleslide slide level1"><h1>Summary</h1></section><section id="high-bandwidth-3d-image-compression" class="slide level2">
<h1>high-bandwidth 3D image compression</h1>
<ul>
<li>tough business given modern CMOS cameras (around 1GB/s at 16bit greyscale)</li>
<li>today:
<ul>
<li>many codecs out there</li>
<li>many bit ranges coming about (8,10,12 bits)</li>
</ul></li>
<li><p>multi-core implementations very competitive (either in compression ratio or speed)</p></li>
<li><p>nvenc through ffmpeg difficult to use/measure</p></li>
</ul>
</section><section id="thank-you-for-your-attention" class="slide level2">
<h1>Thank you for your attention!</h1>
<div class="row vertical-align">
<div class="col-xs-8">
<center>
<figure>
<img src="img/opensource-550x475.png" />
</figure>
<strong><a href="https://github.com/psteinb/gtc2017">github.com/psteinb/gtc2017</a></strong>
</center>
</div>
<div class="col-xs-4">
<center style="font-size: 1.25em">
<p>For questions, concerns or suggestions:</p>
<p><a href="https://github.com/psteinb/gtc2017/issues">Open an issue!</a></p>
</center>
</div>
</div>
</section></section>
      </div>
    </div>


    <script src="reveal.js/lib/js/head.min.js"></script>
    <script src="reveal.js/js/reveal.js"></script>

    <script>

      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      controls: false,
      progress: true,
      history: true,
      center: true,
      
      slideNumber: true,
      // The "normal" size of the presentation, aspect ratio will be preserved
      // when the presentation is scaled to fit different resolutions. Can be
      // specified using percentage units.
      width: 1920,
      height: 1080,

      // Factor of the display size that should remain empty around the content
      margin: 0.01,

      // Bounds for smallest/largest possible scale to apply to content
      minScale: 0.2,
      maxScale: 1.5,

      theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
      transition: 'slide', // default/cube/page/concave/zoom/linear/fade/none

      // Optional libraries used to extend on reveal.js
      dependencies: [
      { src: 'reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
            { src: 'reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
            { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      { src: 'reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
      //          { src: 'reveal.js/plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; }, }
      //          { src: 'reveal.js/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]});
    </script>
      </body>
</html>
